/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2023-06-22 06:32:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bean.Inquiry;

public final class inquiryInsert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/common/header.jsp", Long.valueOf(1687413795271L));
    _jspx_dependants.put("/common/footer.jsp", Long.valueOf(1687336394000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.Inquiry");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Inquiry inquiry_data = (Inquiry) session.getAttribute("inquiryC_data");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>inquiryInsert（お問い合わせ内容確認）</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=container>\r\n");
      out.write("\t\t<!-- ヘッダー -->\r\n");
      out.write("\t\t<div header>\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<h3 style=\"text-align: left\">神田英会話スクール</h3>\r\n");
      out.write("\t\t<h1 style=\"text-align: center\">お問い合わせページ</h1>\r\n");
      out.write("\t\t<div style=\"text-align: right; margin-right: 200px;\">\r\n");
      out.write("\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/view/menu.jsp\">[トップへ戻る]</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<hr\r\n");
      out.write("\t\t\tstyle=\"text-align: center; height: 5px; background-color: blue; width: 950px\">\r\n");
      out.write("\t</div>\r\n");
      out.write("</header>");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 内容内容確認 -->\r\n");
      out.write("\t\t<h3 style=\"text-align: center\">問い合わせ内容確認</h3>\r\n");
      out.write("\t\t<table style=\"margin: auto; border: 0; text-align: center\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"background-color: #6666FF; text-align: right\">名前：</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: left\">");
      out.print(inquiry_data.getName());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"background-color: #6666FF; text-align: right\">年齢：</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: left\">");
      out.print(inquiry_data.getAge());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"background-color: #6666FF; text-align: right\">住所：</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: left\">");
      out.print(inquiry_data.getAddress());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"background-color: #6666FF; text-align: right\">性別：</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: left\">");
      out.print(inquiry_data.getGender());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"background-color: #6666FF; text-align: right\">メールアドレス：</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: left\">");
      out.print(inquiry_data.getEmail());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"background-color: #6666FF; text-align: right\">お問い合わせ項目：</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: left\">");
      out.print(inquiry_data.getCategory());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"background-color: #6666FF; text-align: right\">お問い合わせ内容：</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: left\">\r\n");
      out.write("\t\t\t\t\t<div contents\r\n");
      out.write("\t\t\t\t\t\tstyle=\"padding: 30px; margin-bottom: 10px; border: 1px solid #333333;\">\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(inquiry_data.getContents());
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 送信・修正 -->\r\n");
      out.write("\t\t<div style=\"text-align: center\">\r\n");
      out.write("\t\t\t<br>上記の内容で送信してもよろしいですか？<br> <br>\r\n");
      out.write("\t\t\t<div style=\"display: inline-flex\">\r\n");
      out.write("\t\t\t\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/view/inquiryForm.jsp\"\r\n");
      out.write("\t\t\t\t\tclass=\"change-button\">\r\n");
      out.write("\t\t\t\t\t<input type=\"submit\" value=\"修正\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"display: inline-block; outline: none; cursor: pointer; font-size: 14px; line-height: 1; border-radius: 500px; transition-property: background-color, border-color, color, box-shadow, filter; transition-duration: .3s; border: 1px solid transparent; letter-spacing: 2px; min-width: 160px; text-transform: uppercase; white-space: normal; font-weight: 700; text-align: center; padding: 16px 14px 18px; color: black; box-shadow: inset 0 0 0 2px black; background-color: #F98866; height: 48px; : hover { color : #fff; background-color: #80bd9e;\">\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/inquiryInsert\"\r\n");
      out.write("\t\t\t\t\tclass=\"send-button\">\r\n");
      out.write("\t\t\t\t\t<input type=\"submit\" value=\"送信\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"display: inline-block; outline: none; cursor: pointer; font-size: 14px; line-height: 1; border-radius: 500px; transition-property: background-color, border-color, color, box-shadow, filter; transition-duration: .3s; border: 1px solid transparent; letter-spacing: 2px; min-width: 160px; text-transform: uppercase; white-space: normal; font-weight: 700; text-align: center; padding: 16px 14px 18px; color: black; box-shadow: inset 0 0 0 2px black; background-color: #6666FF; height: 48px; : hover { color : #fff; background-color: #80bd9e;\">\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- フッター -->\r\n");
      out.write("\t<div footer>\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<footer>\r\n");
      out.write("\t<div class=\"container\" style=\"text-align: center;\">\r\n");
      out.write("\t\t<hr\r\n");
      out.write("\t\t\tstyle=\"text-align: center; height: 5px; background-color: blue; width: 950px\">\r\n");
      out.write("\r\n");
      out.write("\t\t© 2023 KandaEnglishSchool. All Right Reserved.\r\n");
      out.write("\t</div>\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
