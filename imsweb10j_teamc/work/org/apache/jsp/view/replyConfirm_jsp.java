/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2023-06-22 06:05:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bean.Inquiry;

public final class replyConfirm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.Inquiry");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Inquiry inquiry_data = (Inquiry) session.getAttribute("inquiry_data");
	String subject_data = (String) session.getAttribute("subject_data");
	String reply_data = (String) session.getAttribute("reply_data");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>返信確認画面</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- ページタイトル -->\r\n");
      out.write("\t<h2 style=\"text-align: center; margin-top:50px\">お問い合わせ内容</h2>\r\n");
      out.write("\r\n");
      out.write("\t<hr style=\"text-align: center; height: 5px; background-color: #80bd9e; width: 950px\">\r\n");
      out.write("\r\n");
      out.write("\t<!-- お問い合わせ内容部分 -->\r\n");
      out.write("\t<table style=\"margin: auto; border: 0;\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: right; background-color: #80bd9e\" colspan=\"2\">日付：</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(inquiry_data.getDate());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: right; background-color: #80bd9e\" colspan=\"2\">名前：</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(inquiry_data.getName());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: right; background-color: #80bd9e\" colspan=\"2\">年齢：</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(inquiry_data.getAge());
      out.write("歳</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: right; background-color: #80bd9e\" colspan=\"2\">性別：</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(inquiry_data.getGender());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: right; background-color: #80bd9e\" colspan=\"2\">住所：</td>\r\n");
      out.write("\t\t\t\t<td colspan=\"6\">");
      out.print(inquiry_data.getAddress());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: center; background-color: #80bd9e\" colspan=\"2\">お問い合わせ項目：</td>\r\n");
      out.write("\t\t\t\t<td colspan=\"6\">");
      out.print(inquiry_data.getCategory());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: center; background-color: #80bd9e\" colspan=\"2\">お問い合わせ内容：</td>\r\n");
      out.write("\t\t\t\t<td colspan=\"6\">");
      out.print(inquiry_data.getContents());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t<!--  入力内容確認 -->\r\n");
      out.write("\t<h3 style=\"text-align: center; margin-top:100px\">記入内容</h3>\r\n");
      out.write("\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<table style=\"margin: auto; border: 0;\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>件名：</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(subject_data);
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>本文：</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(reply_data);
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div align=\"middle\">\r\n");
      out.write("\r\n");
      out.write("\t\t<p>上記の内容で送信してよろしいですか？</p>\r\n");
      out.write("\r\n");
      out.write("\t\t<div style=\"display: inline-flex\">\r\n");
      out.write("\r\n");
      out.write("\t\t<form\r\n");
      out.write("\t\t\t\taction=\"");
      out.print(request.getContextPath());
      out.write("/view/inquiryReplyForm.jsp\"\r\n");
      out.write("\t\t\t\tclass=\"change-button\">\r\n");
      out.write("\t\t\t\t<input type=\"submit\" value=\"修正\" style=\"\r\n");
      out.write("\t\t\t\tdisplay: inline-block;\r\n");
      out.write("\t\t\t\t\toutline: none;\r\n");
      out.write("\t\t\t\t\tcursor: pointer;\r\n");
      out.write("\t\t\t\t\tfont-size: 14px;\r\n");
      out.write("\t\t\t\t\tline-height: 1;\r\n");
      out.write("\t\t\t\t\tborder-radius: 500px;\r\n");
      out.write("\t\t\t\t\ttransition-property: background-color,border-color,color,box-shadow,filter;\r\n");
      out.write("\t\t\t\t\ttransition-duration: .3s;\r\n");
      out.write("\t\t\t\t\tborder: 1px solid transparent;\r\n");
      out.write("\t\t\t\t\tletter-spacing: 2px;\r\n");
      out.write("\t\t\t\t\tmin-width: 160px;\r\n");
      out.write("\t\t\t\t\ttext-transform: uppercase;\r\n");
      out.write("\t\t\t\t\twhite-space: normal;\r\n");
      out.write("\t\t\t\t\tfont-weight: 700;\r\n");
      out.write("\t\t\t\t\ttext-align: center;\r\n");
      out.write("\t\t\t\t\tpadding: 16px 14px 18px;\r\n");
      out.write("\t\t\t\t\tcolor: black;\r\n");
      out.write("\t\t\t\t\tbox-shadow: inset 0 0 0 2px black;\r\n");
      out.write("\t\t\t\t\tbackground-color: #F98866;\r\n");
      out.write("\t\t\t\t\theight: 48px;\r\n");
      out.write("\t\t\t\t\t:hover{\r\n");
      out.write("\t\t\t\t\t\tcolor: #fff;\r\n");
      out.write("\t\t\t\t\t\tbackground-color: #80bd9e;\r\n");
      out.write("\t\t\t\t\t}\">\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/sendMail\"\r\n");
      out.write("\t\t\t\tclass=\"send-button\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<input type=\"submit\" value=\"送信\" style=\"\r\n");
      out.write("\t\t\t\t\tdisplay: inline-block;\r\n");
      out.write("\t\t\t\t\toutline: none;\r\n");
      out.write("\t\t\t\t\tcursor: pointer;\r\n");
      out.write("\t\t\t\t\tfont-size: 14px;\r\n");
      out.write("\t\t\t\t\tline-height: 1;\r\n");
      out.write("\t\t\t\t\tborder-radius: 500px;\r\n");
      out.write("\t\t\t\t\ttransition-property: background-color,border-color,color,box-shadow,filter;\r\n");
      out.write("\t\t\t\t\ttransition-duration: .3s;\r\n");
      out.write("\t\t\t\t\tborder: 1px solid transparent;\r\n");
      out.write("\t\t\t\t\tletter-spacing: 2px;\r\n");
      out.write("\t\t\t\t\tmin-width: 160px;\r\n");
      out.write("\t\t\t\t\ttext-transform: uppercase;\r\n");
      out.write("\t\t\t\t\twhite-space: normal;\r\n");
      out.write("\t\t\t\t\tfont-weight: 700;\r\n");
      out.write("\t\t\t\t\ttext-align: center;\r\n");
      out.write("\t\t\t\t\tpadding: 16px 14px 18px;\r\n");
      out.write("\t\t\t\t\tcolor: black;\r\n");
      out.write("\t\t\t\t\tbox-shadow: inset 0 0 0 2px black;\r\n");
      out.write("\t\t\t\t\tbackground-color: #80bd9e;\r\n");
      out.write("\t\t\t\t\theight: 48px;\r\n");
      out.write("\t\t\t\t\t:hover{\r\n");
      out.write("\t\t\t\t\t\tcolor: #fff;\r\n");
      out.write("\t\t\t\t\t\tbackground-color: #80bd9e;\r\n");
      out.write("\t\t\t\t\t}\">\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
